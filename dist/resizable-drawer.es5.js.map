{"version":3,"sources":["resizable-drawer.js"],"names":[],"mappings":"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","file":"resizable-drawer.es5.js","sourcesContent":["/*!\n * resizable-drawer.js (1.0.0-beta.7)\n *\n * Copyright (c) 2016 Brandon Sara (http://bsara.github.io)\n * Licensed under the CPOL-1.02 (https://github.com/bsara/resizable-drawer.js/blob/master/LICENSE.md)\n */\nexport default (function() {\n\n  // region Private Constants\n\n  const DRAG_ICON = document.createElement('img');\n\n  // endregion\n\n\n  // region Private Property WeakMaps\n\n  let _events = new WeakMap();\n\n  let _$el      = new WeakMap();\n  let _$content = new WeakMap();\n  let _$handle  = new WeakMap();\n\n  let _contentMinHeight      = new WeakMap();\n  let _contentOriginalHeight = new WeakMap();\n  let _contentStartHeight    = new WeakMap();\n  let _contentStartScrollTop = new WeakMap();\n\n  let _cursorStartPosY = new WeakMap();\n\n  let _isEnabled = new WeakMap();\n  let _isOpen    = new WeakMap();\n\n  let _isNotDestroyed = new WeakMap();\n\n  let _boundOnScrollContentWhileDragging = new WeakMap();\n\n  let _boundOnDragStart = new WeakMap();\n  let _boundOnDrag      = new WeakMap();\n  let _boundOnDragEnd   = new WeakMap();\n\n  let _boundOnTouchStart = new WeakMap();\n  let _boundOnTouchMove  = new WeakMap();\n  let _boundOnTouchEnd   = new WeakMap();\n\n  // endregion\n\n\n\n  /**\n   * TODO: Add description\n   *\n   * @class\n   */\n  class ResizableDrawer {\n\n    /**\n     * @param {Object|HTMLElement} options - TODO: Add description\n     *\n     * @param {HTMLElement} options.el                      - TODO: Add description\n     * @param {Number}      [options.contentOriginalHeight] - TODO: Add description\n     * @param {Number}      [options.contentMinHeight = 0]  - TODO: Add description\n     * @param {Boolean}     [options.startEnabled = true]   - TODO: Add description\n     * @param {Boolean}     [options.startOpen = true]      - TODO: Add description\n     *\n     * @throws {TypeError} If `el` is not given and options is not of type `HTMLElement`.\n     *\n     * @constructor\n     */\n    constructor({el, contentOriginalHeight, contentMinHeight = 0, startEnabled = true, startOpen = true}) {\n      if (new.target == null) {\n        return new ResizableDrawer.apply(this, arguments);\n      }\n\n\n      if (arguments.length > 0 && arguments[0] instanceof HTMLElement) {\n        el = arguments[0];\n      } else if (el == null || ~(el instanceof HTMLElement)) {\n        throw new ReferenceError(`'el' is a required parameter and must be of type 'HTMLElement' when creating a new 'ResizableDrawer'!`);\n      }\n\n\n      _isNotDestroyed.set(this, true);\n\n\n      this.contentMinHeight = contentMinHeight;\n\n\n      _events.set(this, {});\n\n\n      _$el.set(this, el);\n      _$content.set(this, this.$el.querySelector('.resizable-drawer-content'));\n      _$handle.set(this, this.$el.querySelector('.resizable-drawer-handle'));\n\n\n      _boundOnDragStart.set(this, _onDragStart.bind(this));\n      _boundOnDrag.set(this, _onDrag.bind(this));\n      _boundOnDragEnd.set(this, _onDragEnd.bind(this));\n\n      _boundOnTouchStart.set(this, _onTouchStart.bind(this));\n      _boundOnTouchMove.set(this, _onTouchMove.bind(this));\n      _boundOnTouchEnd.set(this, _onTouchEnd.bind(this));\n\n\n\n      if (startEnabled) {\n        this.enable(true);\n      } else {\n        _isEnabled.set(this, false);\n      }\n\n\n      if (startOpen) {\n        this.open(true);\n      } else {\n        _isOpen.set(this, false);\n      }\n    }\n\n\n\n    /**\n     * Opens the drawer (only has any effect if a specific `contentMinHeight`\n     * is given upon object creation).\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    open(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      let $content = _$content.get(this);\n\n      $content.style.height   = '';\n      $content.style.padding  = '';\n      $content.style.border   = '';\n      $content.style.overflow = '';\n\n      _isOpen.set(this, true);\n\n      if (!silent) {\n        _triggerEvent.call(this, 'open');\n      }\n    }\n\n\n    /**\n     * Closes the drawer.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    close(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      let $content = _$content.get(this);\n\n      $content.style.height   = '0';\n      $content.style.padding  = '0';\n      $content.style.border   = 'none';\n      $content.style.overflow = 'hidden';\n\n      _isOpen.set(this, false);\n\n      if (!silent) {\n        _triggerEvent.call(this, 'close');\n      }\n    }\n\n\n    /**\n     * Toggles the drawer to be open if it is closed, and closed\n     * if it is open.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    toggleOpenClosed(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      if (this.isOpen) {\n        this.close(silent);\n        return;\n      }\n      this.open(silent);\n    }\n\n\n    /**\n     * Enables the resizable functionality of the drawer.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    enable(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      let $handle = _$handle.get(this);\n\n      $handle.addEventListener('dragstart', _boundOnDragStart.get(this));\n      $handle.addEventListener('drag',      _boundOnDrag.get(this));\n      $handle.addEventListener('dragend',   _boundOnDragEnd.get(this));\n\n      $handle.addEventListener('touchstart', _boundOnTouchStart.get(this));\n      $handle.addEventListener('touchmove',  _boundOnTouchMove.get(this));\n      $handle.addEventListener('touchend',   _boundOnTouchEnd.get(this));\n\n      $handle.setAttribute('draggable', true);\n\n      _isEnabled.set(this, true);\n\n      if (!silent) {\n        _triggerEvent.call(this, 'enable');\n      }\n    }\n\n\n    /**\n     * Disables the resizable functionality of the drawer.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    disable(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      let $handle = _$handle.get(this);\n\n      $handle.removeAttribute('draggable');\n\n      $handle.removeEventListener('dragstart', _boundOnDragStart.get(this));\n      $handle.removeEventListener('drag',      _boundOnDrag.get(this));\n      $handle.removeEventListener('dragend',   _boundOnDragEnd.get(this));\n\n      $handle.removeEventListener('touchstart', _boundOnTouchStart.get(this));\n      $handle.removeEventListener('touchmove',  _boundOnTouchMove.get(this));\n      $handle.removeEventListener('touchend',   _boundOnTouchEnd.get(this));\n\n      _isEnabled.set(this, false);\n\n      if (!silent) {\n        _triggerEvent.call(this, 'disable');\n      }\n    }\n\n\n    /**\n     * Toggles the drawer to be enabled if it is disabled, and disabled\n     * if it is enabled.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    toggleEnabled(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      if (this.isEnabled) {\n        this.disable(silent);\n        return;\n      }\n      this.enable(silent);\n    }\n\n\n    /**\n     * Destroys this object, removing all changes it has made to all DOM elements\n     * and clearing up all memory that it was using.\n     *\n     * *WARNING:* Calling this function will result in the object becoming unusable!\n     * If you want to just disable the resizable functionality temporarily, use the\n     * `disable` & `enable` functions.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    destroy(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n\n      this.disable(true);\n\n\n      _isNotDestroyed.delete(this);\n\n\n      _$content.get(this).removeEventListener('scroll', _boundOnScrollContentWhileDragging.get(this));\n\n\n      _$el.delete(this);\n      _$content.delete(this);\n      _$handle.delete(this);\n\n      _contentMinHeight.delete(this);\n      _contentOriginalHeight.delete(this);\n      _contentStartHeight.delete(this);\n      _contentStartScrollTop.delete(this);\n\n      _cursorStartPosY.delete(this);\n\n      _boundOnScrollContentWhileDragging.delete(this);\n\n      _boundOnDragStart.delete(this);\n      _boundOnDrag.delete(this);\n      _boundOnDragEnd.delete(this);\n\n      _boundOnTouchStart.delete(this);\n      _boundOnTouchMove.delete(this);\n      _boundOnTouchEnd.delete(this);\n\n\n      if (!silent) {\n        _triggerEvent.call(this, 'destroy');\n      }\n\n\n      _events.delete(this);\n    }\n\n\n    // region Getters/Setters\n\n    /** @returns {HTMLElement} - The `HTMLElement` represented by this object. */\n    get $el() {\n      return (this.isDestroyed ? undefined : _$el.get(this));\n    }\n\n\n    /** @returns {Number} - The \"original\" height of the drawer content element (in pixels). */\n    get contentOriginalHeight() {\n      return (this.isDestroyed ? undefined : _contentOriginalHeight.get(this));\n    }\n\n\n    /** @param {Number} value - The \"original\" height of the drawer contentElement (in pixels). */\n    set contentOriginalHeight(value) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      if (typeof value !== 'number' && !(value instanceof Number)) {\n        throw new TypeError(`'contentOriginalHeight' must be a Number, but a ${typeof value} was given.`);\n      }\n\n      _contentOriginalHeight.set(this, value);\n    }\n\n\n    /** @returns {Number} - The minimum height of the drawer content element (in pixels). */\n    get contentMinHeight() {\n      return (this.isDestroyed ? undefined : _contentMinHeight.get(this));\n    }\n\n\n    /** @param {Number} value - The minimum height of the drawer contentElement (in pixels). */\n    set contentMinHeight(value) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      if (typeof value !== 'number' && !(value instanceof Number)) {\n        throw new TypeError(`'contentMinHeight' must be a Number, but a ${typeof value} was given.`);\n      }\n\n      _contentMinHeight.set(this, value);\n    }\n\n\n    /** @returns {Boolean} */\n    get isEnabled() {\n      return (!this.isDestroyed && _isEnabled.get(this) === true);\n    }\n\n\n    /** @returns {Boolean} */\n    get isOpen() {\n      return (!this.isDestroyed && _isOpen.get(this) === true);\n    }\n\n\n    /** @returns {Boolean} */\n    get isDestroyed() {\n      return (_isNotDestroyed.get(this) !== true);\n    }\n\n\n    /**\n     * TODO: Add description\n     *\n     * @param  {String}   eventName    - TODO: Add description\n     * @param  {Function} eventHandler - TODO: Add description\n     */\n    addEventListener(eventName, eventHandler) {\n      let events        = _events.get(this);\n      let eventHandlers = events[eventName];\n\n      if (eventHandlers == null) {\n        eventHandlers = events[eventName] = new Set();\n      }\n\n      eventHandlers.add(eventHandler);\n    }\n\n\n    /**\n     * TODO: Add description\n     *\n     * @param  {String}   eventName    - TODO: Add description\n     * @param  {Function} eventHandler - TODO: Add description\n     */\n    removeEventListener(eventName, eventHandler) {\n      let events        = _events.get(this);\n      let eventHandlers = events[eventName];\n\n      if (eventHandlers == null) {\n        return;\n      }\n\n      eventHandlers.delete(eventHandler);\n\n      if (eventHandlers.size === 0) {\n        delete events[eventName];\n      }\n    }\n\n    // endregion\n  }\n\n\n\n  /** @private */\n  function _setupDrag(e) {\n    let $content                         = _$content.get(this);\n    let onScrollContentWhileDraggingFunc = _onScrollContentWhileDragging.bind(this);\n\n    _contentStartHeight.set(this, $content.getBoundingClientRect().height);\n    _contentStartScrollTop.set(this, $content.scrollTop);\n    _cursorStartPosY.set(this, e.clientY);\n\n    _boundOnScrollContentWhileDragging.set(this, onScrollContentWhileDraggingFunc);\n\n    $content.addEventListener('scroll', onScrollContentWhileDraggingFunc);\n  }\n\n\n  /** @private */\n  function _processDrag(e) {\n    if (e.clientY < this.contentMinHeight) {\n      return;\n    }\n\n    let moveDistance = (e.clientY - _cursorStartPosY.get(this));\n\n    _$content.get(this).style.height = ((_contentStartHeight.get(this) + moveDistance) + 'px');\n  }\n\n\n  /** @private */\n  function _teardownDrag() {\n    _contentStartHeight.delete(this);\n    _cursorStartPosY.delete(this);\n\n    _$content.get(this).removeEventListener('scroll', _boundOnScrollContentWhileDragging.get(this));\n\n    _boundOnScrollContentWhileDragging.delete(this);\n  }\n\n\n  /** @private */\n  function _triggerEvent(eventName, ...args) {\n    let eventHandlers = _events.get(this)[eventName];\n\n    if (eventHandlers == null) {\n      return;\n    }\n\n    eventHandlers.forEach((eventHandler) => {\n      Promise.resolve().then(() => eventHandler(this, ...args));\n    });\n  }\n\n\n  // region Event Handlers\n\n  /** @private */\n  function _onScrollContentWhileDragging(e) {\n    e.preventDefault();\n    _$content.get(this).scrollTop = _contentStartScrollTop.get(this);\n  }\n\n\n  /** @private */\n  function _onDragStart(e) {\n    if (e.dataTransfer != null) {\n      e.dataTransfer.setDragImage(DRAG_ICON, -10, -10);\n    }\n\n    return _setupDrag.call(this, e);\n  }\n\n\n  /** @private */\n  function _onDrag(e) {\n    e.preventDefault();\n    return _processDrag.call(this, e);\n  }\n\n\n  /** @private */\n  function _onDragEnd() {\n    return _teardownDrag.call(this);\n  }\n\n\n  /** @private */\n  function _onTouchStart(e) {\n    if (e.targetTouches.length > 1) {\n      return;\n    }\n\n    return _setupDrag.call(this, e.targetTouches[0]);\n  }\n\n\n  /** @private */\n  function _onTouchMove(e) {\n    if (e.targetTouches.length > 1) {\n      return;\n    }\n\n    e.preventDefault();\n\n    return _processDrag.call(this, e.targetTouches[0]);\n  }\n\n\n  /** @private */\n  function _onTouchEnd() {\n    return _teardownDrag.call(this);\n  }\n\n  // endregion\n\n\n\n  return ResizableDrawer;\n})();\n"],"sourceRoot":"/source/"}