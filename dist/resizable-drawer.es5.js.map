{"version":3,"sources":["resizable-drawer.js"],"names":[],"mappings":"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","file":"resizable-drawer.es5.js","sourcesContent":["/*!\n * resizable-drawer.js (1.0.0-beta.13)\n *\n * Copyright (c) 2016 Brandon Sara (http://bsara.github.io)\n * Licensed under the CPOL-1.02 (https://github.com/bsara/resizable-drawer.js/blob/master/LICENSE.md)\n */\nexport default (function() {\n\n  // region Private Constants\n\n  const DRAG_ICON = document.createElement('img');\n\n  const CSS_CLASS_CONTENT  = 'resizable-drawer-content';\n  const CSS_CLASS_HANDLE   = 'resizable-drawer-handle';\n  const CSS_CLASS_CLOSED   = 'resizable-drawer-closed';\n  const CSS_CLASS_OPEN     = 'resizable-drawer-open';\n  const CSS_CLASS_ENABLED  = 'resizable-drawer-enabled';\n  const CSS_CLASS_DISABLED = 'resizable-drawer-enabled';\n\n  // endregion\n\n\n  // region Private Property WeakMaps\n\n  let _events = new WeakMap();\n\n  let _$el      = new WeakMap();\n  let _$content = new WeakMap();\n  let _$handle  = new WeakMap();\n\n  let _contentStartHeight    = new WeakMap();\n  let _contentStartScrollTop = new WeakMap();\n\n  let _cursorStartPosY = new WeakMap();\n\n  let _isEnabled = new WeakMap();\n  let _isOpen    = new WeakMap();\n\n  let _isNotDestroyed = new WeakMap();\n\n  let _boundOnScrollContentWhileDragging = new WeakMap();\n\n  let _boundOnDragStart = new WeakMap();\n  let _boundOnDrag      = new WeakMap();\n  let _boundOnDragEnd   = new WeakMap();\n\n  let _boundOnTouchStart = new WeakMap();\n  let _boundOnTouchMove  = new WeakMap();\n  let _boundOnTouchEnd   = new WeakMap();\n\n  // endregion\n\n\n\n  /**\n   * TODO: Add description\n   *\n   * @class\n   */\n  class ResizableDrawer {\n\n    /**\n     * @param {Object|HTMLElement} options - TODO: Add description\n     *\n     * @param {HTMLElement} options.el                    - TODO: Add description\n     * @param {Boolean}     [options.startEnabled = true] - TODO: Add description\n     * @param {Boolean}     [options.startOpen = true]    - TODO: Add description\n     *\n     * @throws {TypeError} If `el` is not given and options is not of type `HTMLElement`.\n     *\n     * @constructor\n     */\n    constructor({el, startEnabled = true, startOpen = true}) {\n      if (arguments.length > 0 && arguments[0] instanceof HTMLElement) {\n        el = arguments[0];\n      } else if (el == null || !(el instanceof HTMLElement)) {\n        throw new ReferenceError(`'el' is a required parameter and must be of type 'HTMLElement' when creating a new 'ResizableDrawer'!`);\n      }\n\n\n      _isNotDestroyed.set(this, true);\n\n\n      _events.set(this, {});\n\n\n      _$el.set(this, el);\n      _$content.set(this, this.$el.querySelector(`.${CSS_CLASS_CONTENT}`));\n      _$handle.set(this, this.$el.querySelector(`.${CSS_CLASS_HANDLE}`));\n\n\n      _boundOnDragStart.set(this, _onDragStart.bind(this));\n      _boundOnDrag.set(this, _onDrag.bind(this));\n      _boundOnDragEnd.set(this, _onDragEnd.bind(this));\n\n      _boundOnTouchStart.set(this, _onTouchStart.bind(this));\n      _boundOnTouchMove.set(this, _onTouchMove.bind(this));\n      _boundOnTouchEnd.set(this, _onTouchEnd.bind(this));\n\n\n\n      if (startEnabled) {\n        this.enable(true);\n      } else {\n        this.disable(true);\n      }\n\n\n      if (startOpen) {\n        this.open(true);\n      } else {\n        this.close(true);\n      }\n    }\n\n\n\n    /**\n     * Opens the drawer.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    open(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      _isOpen.set(this, true);\n\n      this.$el.classList.remove(CSS_CLASS_CLOSED);\n      this.$el.classList.add(CSS_CLASS_OPEN);\n\n      if (!silent) {\n        _triggerEvent.call(this, 'open');\n      }\n    }\n\n\n    /**\n     * Closes the drawer.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    close(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      _$content.get(this).style.height = '';\n\n      _isOpen.set(this, false);\n\n      this.$el.classList.remove(CSS_CLASS_OPEN);\n      this.$el.classList.add(CSS_CLASS_CLOSED);\n\n      if (!silent) {\n        _triggerEvent.call(this, 'close');\n      }\n    }\n\n\n    /**\n     * Toggles the drawer to be open if it is closed, and closed\n     * if it is open.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    toggleOpenClosed(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      if (this.isOpen) {\n        this.close(silent);\n        return;\n      }\n      this.open(silent);\n    }\n\n\n    /**\n     * Enables the resizable functionality of the drawer.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    enable(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n\n      let $handle = _$handle.get(this);\n\n      $handle.addEventListener('dragstart', _boundOnDragStart.get(this));\n      $handle.addEventListener('drag',      _boundOnDrag.get(this));\n      $handle.addEventListener('dragend',   _boundOnDragEnd.get(this));\n\n      $handle.addEventListener('touchstart', _boundOnTouchStart.get(this));\n      $handle.addEventListener('touchmove',  _boundOnTouchMove.get(this));\n      $handle.addEventListener('touchend',   _boundOnTouchEnd.get(this));\n\n      $handle.setAttribute('draggable', true);\n\n\n      _isEnabled.set(this, true);\n\n\n      this.$el.classList.remove(CSS_CLASS_DISABLED);\n      this.$el.classList.add(CSS_CLASS_ENABLED);\n\n\n      if (!silent) {\n        _triggerEvent.call(this, 'enable');\n      }\n    }\n\n\n    /**\n     * Disables the resizable functionality of the drawer.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    disable(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n\n      let $handle = _$handle.get(this);\n\n      $handle.removeAttribute('draggable');\n\n      $handle.removeEventListener('dragstart', _boundOnDragStart.get(this));\n      $handle.removeEventListener('drag',      _boundOnDrag.get(this));\n      $handle.removeEventListener('dragend',   _boundOnDragEnd.get(this));\n\n      $handle.removeEventListener('touchstart', _boundOnTouchStart.get(this));\n      $handle.removeEventListener('touchmove',  _boundOnTouchMove.get(this));\n      $handle.removeEventListener('touchend',   _boundOnTouchEnd.get(this));\n\n\n      _isEnabled.set(this, false);\n\n\n      this.$el.classList.remove(CSS_CLASS_ENABLED);\n      this.$el.classList.add(CSS_CLASS_DISABLED);\n\n\n      if (!silent) {\n        _triggerEvent.call(this, 'disable');\n      }\n    }\n\n\n    /**\n     * Toggles the drawer to be enabled if it is disabled, and disabled\n     * if it is enabled.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    toggleEnabled(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      if (this.isEnabled) {\n        this.disable(silent);\n        return;\n      }\n      this.enable(silent);\n    }\n\n\n    /**\n     * Opens the drawer and enables the drawer resizable functionality.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    openAndEnable(silent) {\n      this.open(silent);\n      this.enable(silent);\n    }\n\n\n    /**\n     * Closes the drawer and disables the drawer resizable functionality.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    closeAndDisable(silent) {\n      this.disable(silent);\n      this.close(silent);\n    }\n\n\n    /**\n     * Destroys this object, removing all changes it has made to all DOM elements\n     * and clearing up all memory that it was using.\n     *\n     * *WARNING:* Calling this function will result in the object becoming unusable!\n     * If you want to just disable the resizable functionality temporarily, use the\n     * `disable` & `enable` functions.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    destroy(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n\n      this.disable(true);\n\n\n      _isNotDestroyed.delete(this);\n\n\n      _$content.get(this).removeEventListener('scroll', _boundOnScrollContentWhileDragging.get(this));\n\n\n      _$el.delete(this);\n      _$content.delete(this);\n      _$handle.delete(this);\n\n      _contentStartHeight.delete(this);\n      _contentStartScrollTop.delete(this);\n\n      _cursorStartPosY.delete(this);\n\n      _boundOnScrollContentWhileDragging.delete(this);\n\n      _boundOnDragStart.delete(this);\n      _boundOnDrag.delete(this);\n      _boundOnDragEnd.delete(this);\n\n      _boundOnTouchStart.delete(this);\n      _boundOnTouchMove.delete(this);\n      _boundOnTouchEnd.delete(this);\n\n\n      if (!silent) {\n        _triggerEvent.call(this, 'destroy');\n      }\n\n\n      _events.delete(this);\n    }\n\n\n    // region Getters/Setters\n\n    /** @returns {HTMLElement} - The `HTMLElement` represented by this object. */\n    get $el() {\n      return (this.isDestroyed ? undefined : _$el.get(this));\n    }\n\n\n    /** @returns {Boolean} */\n    get isEnabled() {\n      return (!this.isDestroyed && _isEnabled.get(this) === true);\n    }\n\n\n    /** @returns {Boolean} */\n    get isOpen() {\n      return (!this.isDestroyed && _isOpen.get(this) === true);\n    }\n\n\n    /** @returns {Boolean} */\n    get isDestroyed() {\n      return (_isNotDestroyed.get(this) !== true);\n    }\n\n\n    /**\n     * TODO: Add description\n     *\n     * @param  {String}   eventName    - TODO: Add description\n     * @param  {Function} eventHandler - TODO: Add description\n     */\n    addEventListener(eventName, eventHandler) {\n      let events        = _events.get(this);\n      let eventHandlers = events[eventName];\n\n      if (eventHandlers == null) {\n        eventHandlers = events[eventName] = new Set();\n      }\n\n      eventHandlers.add(eventHandler);\n    }\n\n\n    /**\n     * TODO: Add description\n     *\n     * @param  {String}   eventName    - TODO: Add description\n     * @param  {Function} eventHandler - TODO: Add description\n     */\n    removeEventListener(eventName, eventHandler) {\n      let events        = _events.get(this);\n      let eventHandlers = events[eventName];\n\n      if (eventHandlers == null) {\n        return;\n      }\n\n      eventHandlers.delete(eventHandler);\n\n      if (eventHandlers.size === 0) {\n        delete events[eventName];\n      }\n    }\n\n    // endregion\n  }\n\n\n\n  /** @private */\n  function _setupDrag(e) {\n    let $content                         = _$content.get(this);\n    let onScrollContentWhileDraggingFunc = _onScrollContentWhileDragging.bind(this);\n\n    _contentStartHeight.set(this, $content.getBoundingClientRect().height);\n    _contentStartScrollTop.set(this, $content.scrollTop);\n    _cursorStartPosY.set(this, e.clientY);\n\n    _boundOnScrollContentWhileDragging.set(this, onScrollContentWhileDraggingFunc);\n\n    $content.addEventListener('scroll', onScrollContentWhileDraggingFunc);\n  }\n\n\n  /** @private */\n  function _processDrag(e) {\n    if (e.clientY < 0) {\n      return;\n    }\n\n    let moveDistance = (e.clientY - _cursorStartPosY.get(this));\n\n    _$content.get(this).style.height = ((_contentStartHeight.get(this) + moveDistance) + 'px');\n  }\n\n\n  /** @private */\n  function _teardownDrag() {\n    _contentStartHeight.delete(this);\n    _cursorStartPosY.delete(this);\n\n    _$content.get(this).removeEventListener('scroll', _boundOnScrollContentWhileDragging.get(this));\n\n    _boundOnScrollContentWhileDragging.delete(this);\n  }\n\n\n  /** @private */\n  function _triggerEvent(eventName, ...args) {\n    let eventHandlers = _events.get(this)[eventName];\n\n    if (eventHandlers == null) {\n      return;\n    }\n\n    eventHandlers.forEach((eventHandler) => {\n      Promise.resolve().then(() => eventHandler(this, ...args));\n    });\n  }\n\n\n  // region Event Handlers\n\n  /** @private */\n  function _onScrollContentWhileDragging(e) {\n    e.preventDefault();\n    _$content.get(this).scrollTop = _contentStartScrollTop.get(this);\n  }\n\n\n  /** @private */\n  function _onDragStart(e) {\n    if (e.dataTransfer != null) {\n      e.dataTransfer.setDragImage(DRAG_ICON, -10, -10);\n    }\n\n    return _setupDrag.call(this, e);\n  }\n\n\n  /** @private */\n  function _onDrag(e) {\n    e.preventDefault();\n    return _processDrag.call(this, e);\n  }\n\n\n  /** @private */\n  function _onDragEnd() {\n    return _teardownDrag.call(this);\n  }\n\n\n  /** @private */\n  function _onTouchStart(e) {\n    if (e.targetTouches.length > 1) {\n      return;\n    }\n\n    return _setupDrag.call(this, e.targetTouches[0]);\n  }\n\n\n  /** @private */\n  function _onTouchMove(e) {\n    if (e.targetTouches.length > 1) {\n      return;\n    }\n\n    e.preventDefault();\n\n    return _processDrag.call(this, e.targetTouches[0]);\n  }\n\n\n  /** @private */\n  function _onTouchEnd() {\n    return _teardownDrag.call(this);\n  }\n\n  // endregion\n\n\n\n  return ResizableDrawer;\n})();\n"],"sourceRoot":"/source/"}