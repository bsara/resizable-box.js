{"version":3,"sources":["resizable-drawer.js"],"names":["DRAG_ICON","document","createElement","CSS_CLASS_CONTENT","CSS_CLASS_HANDLE","CSS_CLASS_CLOSED","CSS_CLASS_OPEN","CSS_CLASS_ENABLED","CSS_CLASS_DISABLED","_events","WeakMap","_$el","_$content","_$handle","_contentStartHeight","_contentStartScrollTop","_cursorStartPosY","_isEnabled","_isOpen","_isNotDestroyed","_boundOnScrollContentWhileDragging","_boundOnDragStart","_boundOnDrag","_boundOnDragEnd","_boundOnTouchStart","_boundOnTouchMove","_boundOnTouchEnd","ResizableDrawer","el","startEnabled","startOpen","arguments","length","HTMLElement","ReferenceError","set","$el","querySelector","_onDragStart","bind","_onDrag","_onDragEnd","_onTouchStart","_onTouchMove","_onTouchEnd","enable","disable","open","close","silent","isDestroyed","classList","remove","add","_triggerEvent","call","get","style","height","isOpen","$handle","addEventListener","setAttribute","removeAttribute","removeEventListener","isEnabled","delete","eventName","eventHandler","events","eventHandlers","Set","size","undefined","_setupDrag","e","$content","onScrollContentWhileDraggingFunc","_onScrollContentWhileDragging","getBoundingClientRect","scrollTop","clientY","_processDrag","moveDistance","_teardownDrag","args","forEach","Promise","resolve","then","preventDefault","dataTransfer","setDragImage","targetTouches"],"mappings":"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","file":"resizable-drawer.es5.js","sourcesContent":["/*!\n * resizable-drawer.js (1.0.2)\n *\n * Copyright (c) 2017 Brandon Sara (http://bsara.github.io)\n * Licensed under the CPOL-1.02 (https://github.com/bsara/resizable-drawer.js/blob/master/LICENSE.md)\n */\nexport default (function() {\n\n  // region Private Constants\n\n  const DRAG_ICON = document.createElement('img');\n\n  const CSS_CLASS_CONTENT  = 'resizable-drawer-content';\n  const CSS_CLASS_HANDLE   = 'resizable-drawer-handle';\n  const CSS_CLASS_CLOSED   = 'resizable-drawer-closed';\n  const CSS_CLASS_OPEN     = 'resizable-drawer-open';\n  const CSS_CLASS_ENABLED  = 'resizable-drawer-enabled';\n  const CSS_CLASS_DISABLED = 'resizable-drawer-enabled';\n\n  // endregion\n\n\n  // region Private Property WeakMaps\n\n  let _events = new WeakMap();\n\n  let _$el      = new WeakMap();\n  let _$content = new WeakMap();\n  let _$handle  = new WeakMap();\n\n  let _contentStartHeight    = new WeakMap();\n  let _contentStartScrollTop = new WeakMap();\n\n  let _cursorStartPosY = new WeakMap();\n\n  let _isEnabled = new WeakMap();\n  let _isOpen    = new WeakMap();\n\n  let _isNotDestroyed = new WeakMap();\n\n  let _boundOnScrollContentWhileDragging = new WeakMap();\n\n  let _boundOnDragStart = new WeakMap();\n  let _boundOnDrag      = new WeakMap();\n  let _boundOnDragEnd   = new WeakMap();\n\n  let _boundOnTouchStart = new WeakMap();\n  let _boundOnTouchMove  = new WeakMap();\n  let _boundOnTouchEnd   = new WeakMap();\n\n  // endregion\n\n\n\n  /**\n   * TODO: Add description\n   *\n   * @class\n   */\n  class ResizableDrawer {\n\n    /**\n     * @param {Object|HTMLElement} options - TODO: Add description\n     *\n     * @param {HTMLElement} options.el                    - TODO: Add description\n     * @param {Boolean}     [options.startEnabled = true] - TODO: Add description\n     * @param {Boolean}     [options.startOpen = true]    - TODO: Add description\n     *\n     * @throws {TypeError} If `el` is not given and options is not of type `HTMLElement`.\n     *\n     * @constructor\n     */\n    constructor({el, startEnabled = true, startOpen = true}) {\n      if (arguments.length > 0 && arguments[0] instanceof HTMLElement) {\n        el = arguments[0];\n      } else if (el == null || !(el instanceof HTMLElement)) {\n        throw new ReferenceError(`'el' is a required parameter and must be of type 'HTMLElement' when creating a new 'ResizableDrawer'!`);\n      }\n\n\n      _isNotDestroyed.set(this, true);\n\n\n      _events.set(this, {});\n\n\n      _$el.set(this, el);\n      _$content.set(this, this.$el.querySelector(`.${CSS_CLASS_CONTENT}`));\n      _$handle.set(this, this.$el.querySelector(`.${CSS_CLASS_HANDLE}`));\n\n\n      _boundOnDragStart.set(this, _onDragStart.bind(this));\n      _boundOnDrag.set(this, _onDrag.bind(this));\n      _boundOnDragEnd.set(this, _onDragEnd.bind(this));\n\n      _boundOnTouchStart.set(this, _onTouchStart.bind(this));\n      _boundOnTouchMove.set(this, _onTouchMove.bind(this));\n      _boundOnTouchEnd.set(this, _onTouchEnd.bind(this));\n\n\n\n      if (startEnabled) {\n        this.enable(true);\n      } else {\n        this.disable(true);\n      }\n\n\n      if (startOpen) {\n        this.open(true);\n      } else {\n        this.close(true);\n      }\n    }\n\n\n\n    /**\n     * Opens the drawer.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    open(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      _isOpen.set(this, true);\n\n      this.$el.classList.remove(CSS_CLASS_CLOSED);\n      this.$el.classList.add(CSS_CLASS_OPEN);\n\n      if (!silent) {\n        _triggerEvent.call(this, 'open');\n      }\n    }\n\n\n    /**\n     * Closes the drawer.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    close(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      _$content.get(this).style.height = '';\n\n      _isOpen.set(this, false);\n\n      this.$el.classList.remove(CSS_CLASS_OPEN);\n      this.$el.classList.add(CSS_CLASS_CLOSED);\n\n      if (!silent) {\n        _triggerEvent.call(this, 'close');\n      }\n    }\n\n\n    /**\n     * Toggles the drawer to be open if it is closed, and closed\n     * if it is open.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    toggleOpenClosed(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      if (this.isOpen) {\n        this.close(silent);\n        return;\n      }\n      this.open(silent);\n    }\n\n\n    /**\n     * Enables the resizable functionality of the drawer.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    enable(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n\n      let $handle = _$handle.get(this);\n\n      $handle.addEventListener('dragstart', _boundOnDragStart.get(this));\n      $handle.addEventListener('drag',      _boundOnDrag.get(this));\n      $handle.addEventListener('dragend',   _boundOnDragEnd.get(this));\n\n      $handle.addEventListener('touchstart', _boundOnTouchStart.get(this));\n      $handle.addEventListener('touchmove',  _boundOnTouchMove.get(this));\n      $handle.addEventListener('touchend',   _boundOnTouchEnd.get(this));\n\n      $handle.setAttribute('draggable', true);\n\n\n      _isEnabled.set(this, true);\n\n\n      this.$el.classList.remove(CSS_CLASS_DISABLED);\n      this.$el.classList.add(CSS_CLASS_ENABLED);\n\n\n      if (!silent) {\n        _triggerEvent.call(this, 'enable');\n      }\n    }\n\n\n    /**\n     * Disables the resizable functionality of the drawer.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    disable(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n\n      let $handle = _$handle.get(this);\n\n      $handle.removeAttribute('draggable');\n\n      $handle.removeEventListener('dragstart', _boundOnDragStart.get(this));\n      $handle.removeEventListener('drag',      _boundOnDrag.get(this));\n      $handle.removeEventListener('dragend',   _boundOnDragEnd.get(this));\n\n      $handle.removeEventListener('touchstart', _boundOnTouchStart.get(this));\n      $handle.removeEventListener('touchmove',  _boundOnTouchMove.get(this));\n      $handle.removeEventListener('touchend',   _boundOnTouchEnd.get(this));\n\n\n      _isEnabled.set(this, false);\n\n\n      this.$el.classList.remove(CSS_CLASS_ENABLED);\n      this.$el.classList.add(CSS_CLASS_DISABLED);\n\n\n      if (!silent) {\n        _triggerEvent.call(this, 'disable');\n      }\n    }\n\n\n    /**\n     * Toggles the drawer to be enabled if it is disabled, and disabled\n     * if it is enabled.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    toggleEnabled(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      if (this.isEnabled) {\n        this.disable(silent);\n        return;\n      }\n      this.enable(silent);\n    }\n\n\n    /**\n     * Opens the drawer and enables the drawer resizable functionality.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    openAndEnable(silent) {\n      this.open(silent);\n      this.enable(silent);\n    }\n\n\n    /**\n     * Closes the drawer and disables the drawer resizable functionality.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    closeAndDisable(silent) {\n      this.disable(silent);\n      this.close(silent);\n    }\n\n\n    /**\n     * Destroys this object, removing all changes it has made to all DOM elements\n     * and clearing up all memory that it was using.\n     *\n     * *WARNING:* Calling this function will result in the object becoming unusable!\n     * If you want to just disable the resizable functionality temporarily, use the\n     * `disable` & `enable` functions.\n     *\n     * @param {Boolean} [silent = false] - TODO: Add description\n     */\n    destroy(silent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n\n      this.disable(true);\n\n\n      _isNotDestroyed.delete(this);\n\n\n      _$content.get(this).removeEventListener('scroll', _boundOnScrollContentWhileDragging.get(this));\n\n\n      _$el.delete(this);\n      _$content.delete(this);\n      _$handle.delete(this);\n\n      _contentStartHeight.delete(this);\n      _contentStartScrollTop.delete(this);\n\n      _cursorStartPosY.delete(this);\n\n      _boundOnScrollContentWhileDragging.delete(this);\n\n      _boundOnDragStart.delete(this);\n      _boundOnDrag.delete(this);\n      _boundOnDragEnd.delete(this);\n\n      _boundOnTouchStart.delete(this);\n      _boundOnTouchMove.delete(this);\n      _boundOnTouchEnd.delete(this);\n\n\n      if (!silent) {\n        _triggerEvent.call(this, 'destroy');\n      }\n\n\n      _events.delete(this);\n    }\n\n\n    // region Getters/Setters\n\n    /** @returns {HTMLElement} - The `HTMLElement` represented by this object. */\n    get $el() {\n      return (this.isDestroyed ? undefined : _$el.get(this));\n    }\n\n\n    /** @returns {Boolean} */\n    get isEnabled() {\n      return (!this.isDestroyed && _isEnabled.get(this) === true);\n    }\n\n\n    /** @returns {Boolean} */\n    get isOpen() {\n      return (!this.isDestroyed && _isOpen.get(this) === true);\n    }\n\n\n    /** @returns {Boolean} */\n    get isDestroyed() {\n      return (_isNotDestroyed.get(this) !== true);\n    }\n\n\n    /**\n     * TODO: Add description\n     *\n     * @param  {String}   eventName    - TODO: Add description\n     * @param  {Function} eventHandler - TODO: Add description\n     */\n    addEventListener(eventName, eventHandler) {\n      let events        = _events.get(this);\n      let eventHandlers = events[eventName];\n\n      if (eventHandlers == null) {\n        eventHandlers = events[eventName] = new Set();\n      }\n\n      eventHandlers.add(eventHandler);\n    }\n\n\n    /**\n     * TODO: Add description\n     *\n     * @param  {String}   eventName    - TODO: Add description\n     * @param  {Function} eventHandler - TODO: Add description\n     */\n    removeEventListener(eventName, eventHandler) {\n      let events        = _events.get(this);\n      let eventHandlers = events[eventName];\n\n      if (eventHandlers == null) {\n        return;\n      }\n\n      eventHandlers.delete(eventHandler);\n\n      if (eventHandlers.size === 0) {\n        delete events[eventName];\n      }\n    }\n\n    // endregion\n  }\n\n\n\n  /** @private */\n  function _setupDrag(e) {\n    let $content                         = _$content.get(this);\n    let onScrollContentWhileDraggingFunc = _onScrollContentWhileDragging.bind(this);\n\n    _contentStartHeight.set(this, $content.getBoundingClientRect().height);\n    _contentStartScrollTop.set(this, $content.scrollTop);\n    _cursorStartPosY.set(this, e.clientY);\n\n    _boundOnScrollContentWhileDragging.set(this, onScrollContentWhileDraggingFunc);\n\n    $content.addEventListener('scroll', onScrollContentWhileDraggingFunc);\n  }\n\n\n  /** @private */\n  function _processDrag(e) {\n    if (e.clientY < 0) {\n      return;\n    }\n\n    let moveDistance = (e.clientY - _cursorStartPosY.get(this));\n\n    _$content.get(this).style.height = ((_contentStartHeight.get(this) + moveDistance) + 'px');\n  }\n\n\n  /** @private */\n  function _teardownDrag() {\n    _contentStartHeight.delete(this);\n    _cursorStartPosY.delete(this);\n\n    _$content.get(this).removeEventListener('scroll', _boundOnScrollContentWhileDragging.get(this));\n\n    _boundOnScrollContentWhileDragging.delete(this);\n  }\n\n\n  /** @private */\n  function _triggerEvent(eventName, ...args) {\n    let eventHandlers = _events.get(this)[eventName];\n\n    if (eventHandlers == null) {\n      return;\n    }\n\n    eventHandlers.forEach((eventHandler) => {\n      Promise.resolve().then(() => eventHandler(this, ...args));\n    });\n  }\n\n\n  // region Event Handlers\n\n  /** @private */\n  function _onScrollContentWhileDragging(e) {\n    e.preventDefault();\n    _$content.get(this).scrollTop = _contentStartScrollTop.get(this);\n  }\n\n\n  /** @private */\n  function _onDragStart(e) {\n    if (e.dataTransfer != null) {\n      e.dataTransfer.setDragImage(DRAG_ICON, -10, -10);\n    }\n\n    return _setupDrag.call(this, e);\n  }\n\n\n  /** @private */\n  function _onDrag(e) {\n    e.preventDefault();\n    return _processDrag.call(this, e);\n  }\n\n\n  /** @private */\n  function _onDragEnd() {\n    return _teardownDrag.call(this);\n  }\n\n\n  /** @private */\n  function _onTouchStart(e) {\n    if (e.targetTouches.length > 1) {\n      return;\n    }\n\n    return _setupDrag.call(this, e.targetTouches[0]);\n  }\n\n\n  /** @private */\n  function _onTouchMove(e) {\n    if (e.targetTouches.length > 1) {\n      return;\n    }\n\n    e.preventDefault();\n\n    return _processDrag.call(this, e.targetTouches[0]);\n  }\n\n\n  /** @private */\n  function _onTouchEnd() {\n    return _teardownDrag.call(this);\n  }\n\n  // endregion\n\n\n\n  return ResizableDrawer;\n})();\n"]}